services:
  bookify-api:
    image: ${DOCKER_REGISTRY-}bookifyapi
    container_name: Bookify.Api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:7087;http://+:5046
      - ASPNETCORE_HTTPS_PORT=7087
      - ASPNETCORE_Kestrel__Certificates__Default__Password=3cure
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__DefaultConnection=Host=bookify-db;Port=5432;Database=bookify;Username=postgres;Password=3cure
    ports:
      - 5046:5046  # HTTP
      - 7087:7087  # HTTPS
    volumes:
      - D:\MyProjects\RiderProjects\Bookify\Src\Bookify.Api:/app:rw
      - D:\MyProjects\RiderProjects\Bookify:/src:rw
      - C:\Users\Notebook\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
      - C:\Users\Notebook\.aspnet\https:/https:ro  # Corrected volume mapping
      - C:\Users\Notebook\.nuget\packages:/home/app/.nuget/packages:rw
    build:
      context: .
      dockerfile: src/Bookify.Api/Dockerfile
    networks:
      - pgverse
    depends_on:
      bookify-db:
        condition: service_healthy

  bookify-db:
    image: postgres:latest
    container_name: Bookify.Db
    environment:
      - POSTGRES_DB=bookify
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=3cure
      - POSTGRES_HOST_AUTH_METHOD=md5
    volumes:
      - ./.containers/database:/var/lib/postgresql/data
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bookify"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pgverse

networks:
  pgverse:
    driver: bridge